# –æ—Å—Ç–∞–≤—å –Ω–∞–¥–µ–∂–¥—É –≤—Å—è–∫ —Å—é–¥–∞ –≤—Ö–æ–¥—è—â–∏–π
# todo: –ø—Ä–æ–≤–µ—Ä—è—Ç—å todo –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º

import os
import random
import logging
import telebot

from dotenv import load_dotenv
from googlesearch import search
from telebot import types

load_dotenv()

logging.basicConfig(filename='log.txt', level=logging.INFO,
                    format='%(asctime)s : %(levelname)s ::: %(message)s', datefmt='%Y-%m-%d %H:%M:%S')

KEY = os.getenv('API_KEY')
bot = telebot.TeleBot(KEY)

logging.info('<---+--->\nStarting new session')


@bot.message_handler(commands=['start'])
def start(message):
    # todo: ReplyKeyboard
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} {message.from_user.last_name}!\n'
                                      '–Ø - –ú–∏–Ω–∞–∫–æ –ú–∞—Ç—Å—É—à–∏–º–∞, —É—á–µ–Ω–∏—Ü–∞ —Å—Ç–∞—Ä—à–µ–π —à–∫–æ–ª—ã. –Ø —É—á—É —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ —É–∂–µ –Ω–∞ '
                                      '–ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –ø—è—Ç–∏ –ª–µ—Ç. –•–æ—Ç—å –µ–≥–æ —è –∑–Ω–∞—é –ø–ª–æ—Ö–æ, –Ω–æ —É–ø–æ—Ä–Ω–æ —Å—Ç–∞—Ä–∞—é—Å—å –∏ —É—á—É '
                                      '–µ–≥–æ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –ø–æ—ç—Ç–æ–º—É –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–∏ —Ä–µ–ø–ª–∏–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ '
                                      '–∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏. –ê –µ—â—ë —è –∏–Ω–æ–≥–¥–∞ –≤–µ–¥—É —Å–µ–±—è –∫–∞–∫ —Ä–æ–±–æ—Ç. –ù–∞–±–µ—Ä–∏ `/commands` '
                                      '–∏ –≤—Å—ë –ø–æ–π–º—ë—à—å. –î–∞, –∏ –Ω–µ –ø–∏—à–∏ –º–Ω–µ –Ω–æ—á—å—é. –Ø —Å–ø–ª—é.',
                     parse_mode="MARKDOWN")
    logging.info(f'/start: New user - {message.from_user.username}')


@bot.callback_query_handler(func=lambda call: True)
def receive(call):
    if call.data == 'dice_repeat':
        # bot.send_message(call.message.chat.id, 'test')
        dice(call.message)
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)


@bot.message_handler(commands=['hello'])
def greet(message):
    bot.reply_to(message, f'–ü—Ä–∏–≤–µ—Ç, @{message.from_user.username}! –ö–∞–∫ –¥–µ–ª–∞?')
    logging.info(f'{message.from_user.username} typed /hello')


@bot.message_handler(commands=['commands'])
def helpme(message):
    bot.send_message(message.chat.id, '`/commands - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥\n`'
                                      '`/info - –æ–±–æ –º–Ω–µ`\n'
                                      '`/hello - –∑–¥–æ—Ä–æ–≤–∞–µ—Ç—Å—è —Å –Ω–∞–ø–∏—Å–∞–≤—à–∏–º`\n'
                                      '`/dice - –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª (–∏–ª–∏ D100)`\n'
                                      '`/8ball - —à–∞—Ä –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π`\n'
                                      '`/search - –∏—â–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –±–µ–∑ –ø–æ–º–æ—â–∏ –±—Ä–∞—É–∑–µ—Ä–∞`', parse_mode="MARKDOWN")
    logging.info(f'{message.from_user.username} typed /commands')


@bot.message_handler(commands=['info'])
def about(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç. –ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–∏–Ω–∞–∫–æ –ú–∞—Ç—Å—É—à–∏–º–∞. –Ø —Å—Ç—É–¥–µ–Ω—Ç–∫–∞ —Å—Ç–∞—Ä—à–µ–π —à–∫–æ–ª—ã. '
                                      '–Ø —É—á—É —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ —É–∂–µ –ø—è—Ç—å –ª–µ—Ç. –ú–æ–∏ –∑–Ω–∞–Ω–∏—è –Ω–µ –æ—á–µ–Ω—å –±–æ–ª—å—à–∏–µ, –Ω–æ '
                                      '—É –º–µ–Ω—è –º–Ω–æ–≥–æ —Ä—É—Å—Å–∫–∏—Ö –∏ —É–∫—Ä–∞–∏–Ω—Å–∫–∏—Ö –¥—Ä—É–∑–µ–π. –Ø —Ö–æ—á—É –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –∏ '
                                      '—É—á–∏—Ç—å—Å—è –±–æ–ª—å—à–µ. –î–∞–≤–∞–π—Ç–µ –¥—Ä—É–∂–∏—Ç—å!')
    logging.info(f'{message.from_user.username} typed /info')


@bot.message_handler(commands=['dice'])
def dice(message):
    markup = types.InlineKeyboardMarkup()
    btn = types.InlineKeyboardButton(text='üé≤ –ö–∏–Ω—É—Ç—å –∫—É–±–∏–∫ –µ—â—ë —Ä–∞–∑', callback_data='dice_repeat')
    markup.add(btn)
    dicenum = str(random.randint(0, 100))
    bot.send_message(message.chat.id, f'_–ú–∏–Ω–∞–∫–æ –∫–∏–Ω—É–ª–∞ 100-–≥—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫_\n'
                                      f'–ß–∏—Å–ª–æ {dicenum} –ø–æ–∫–∞–∑–∞–ª–æ—Å—å –Ω–∞ –µ–≥–æ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏',
                     parse_mode='MARKDOWN', reply_markup=markup)
    logging.info(f'/dice: {message.from_user.username} got {dicenum}.')


@bot.message_handler(commands=['8ball'])
def eightball(message):
    randomlist = ['–≥–æ–≤–æ—Ä–∏—Ç "–¥–∞"', '—É–≤–µ—Ä–µ–Ω –≤ –ø—Ä–∞–≤–æ—Ç–µ —ç—Ç–æ–π —Ñ—Ä–∞–∑—ã', '–Ω–µ —Å–æ–º–Ω–µ–≤–∞–µ—Ç—Å—è –≤ –∏—Å—Ç–∏–Ω–Ω–µ', '—É–≤–µ—Ä—è–µ—Ç —Ç–µ–±—è –≤ –ø—Ä–∞–≤–¥–µ',
                  '–Ω–µ —É–≤–µ—Ä–µ–Ω –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏', '–≥–æ–≤–æ—Ä–∏—Ç "—Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ"', '–ø–æ—á—Ç–∏ —É–≤–µ—Ä–µ–Ω', '–Ω–µ –¥–æ –∫–æ–Ω—Ü–∞ —É–≤–µ—Ä–µ–Ω',
                  '–Ω–µ –∑–Ω–∞–µ—Ç', '–ø—Ä–æ—Å–∏—Ç –ø–æ–≤—Ç–æ—Ä–∏—Ç—å', '–Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å', '–Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç –≤–æ–ø—Ä–æ—Å–∞',
                  '–≥–æ–≤–æ—Ä–∏—Ç "–Ω–µ—Ç"', '—Å–æ–æ–±—â–∞–µ—Ç "–ª—É—á—à–µ —Ç–µ–±–µ –Ω–µ –∑–Ω–∞—Ç—å"', '—É–≤–µ—Ä–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ "–Ω–µ—Ç"', '–≥–æ–≤–æ—Ä–∏—Ç –æ –∑–Ω–∞–∫–∞—Ö, –∏ '
                                                                                              '–æ–Ω–∏ —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ "–Ω–µ—Ç"']
    randomphrase = random.choice(randomlist)
    bot.reply_to(message, '–û, –≤–µ–ª–∏–∫–∏–π —à–∞—Ä –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π! –û—Ç–∫—Ä–æ–π –Ω–∞–º –≥–ª–∞–∑–∞ –∏ –ø–æ–∫–∞–∂–∏ –∏—Å—Ç–∏–Ω–Ω—É!\n'
                          '_–ú–∏–Ω–∞–∫–æ —Å–º–æ—Ç—Ä–∏—Ç –≤ —à–∞—Ä_\n'
                          f'–®–∞—Ä {randomphrase}.', parse_mode='MARKDOWN')
    logging.info(f'/8ball: {message.from_user.username} typed {message.text} and got "{randomphrase}" phrase.')


@bot.message_handler(commands=['search'])
def search_info(message):
    searchres = ""                                                          # –±–µ–∑ —ç—Ç–æ–π —Å—Ç—Ä–æ—á–∫–∏ pycharm —Ä—É–≥–∞–µ—Ç—Å—è
    query = message.text
    markup = types.InlineKeyboardMarkup()                                   # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ —Å–Ω–∏–∑—É
    markup.add(types.InlineKeyboardButton('‚å® –ó–∞–≥—É–≥–ª–∏—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ', url='google.com'))
    for searchres in search(query, tld='com', lang='ru', num=1, stop=1):    # –±–µ–∑ —ç—Ç–∏—Ö –¥–≤—É—Ö —Å—Ç—Ä–æ—á–µ–∫
        searchres = str(searchres)                                          # –æ–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    bot.reply_to(message, '–≠—Ç–∞ —Å—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ —Ç–µ–±–µ –ø–æ–º–æ—á—å. –ö–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —è —É—Å—Ç–∞–Ω—É –∏—Å–∫–∞—Ç—å –∑–∞ –≤–∞—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...\n'
                          f'{searchres}', reply_markup=markup)              # –∫–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –≥—É–≥–ª
    logging.info(f'/search: {message.from_user.username} tried to find {message.text}')
    # —Ä–∞–±–æ—Ç–∞–µ—Ç
    # –∏ –Ω–∞ —Ç–æ–º —Å–ø–∞—Å–∏–±–æ


bot.polling(none_stop=True)
